DROP SCHEMA IF EXISTS EJERCICIO_10;
CREATE SCHEMA EJERCICIO_10;
USE EJERCICIO_10;

# CLIENTE (ID, DESCUENTO, SALDO)
CREATE TABLE CLIENTE (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    SALDO DECIMAL (9,2) DEFAULT 0.00,
    DESCUENTO DECIMAL (3,2),
    
    CONSTRAINT DESCUENTO_0_1 CHECK (DESCUENTO BETWEEN 0 AND 1)
);


# DIRECCIONES (ID, NUMERO, CALLE, PUEBLO, CIUDAD)
CREATE TABLE DIRECCIONES (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NUMERO SMALLINT,
    CALLE VARCHAR (50),
    PUEBLO VARCHAR (50),
    CIUDAD VARCHAR (50)
);


# PEDIDO (ID, FECHA_Y_HORA, ID_CLIENTE, ID_DIRECCIONES)
CREATE TABLE PEDIDO (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	FECHA_Y_HORA DATETIME,
    ID_CLIENTE INT,
    ID_DIRECCIONES INT,
    
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID),
    FOREIGN KEY (ID_DIRECCIONES) REFERENCES DIRECCIONES(ID)
);


# ARTÍCULO (ID, DESCRIPCIÓN)
CREATE TABLE ARTICULO (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION MEDIUMTEXT NOT NULL
);

# FABRICA (ID, TELEFONO, TOTAL_ARTICULOS)
CREATE TABLE FABRICA (
	ID INT PRIMARY KEY AUTO_INCREMENT,
    TELEFONO VARCHAR (15) UNIQUE,
    TOTAL_ARTICULOS DECIMAL (7,2) 
);

# CLIENTE_TIENE_DIRECCIONES (ID_CLIENTE, ID_DIRECCIONES)
CREATE TABLE CLIENTE_TIENE_DIRECCIONES (
	ID_CLIENTE INT,
    ID_DIRECCIONES INT,
    
    PRIMARY KEY (ID_CLIENTE, ID_DIRECCIONES),
    
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID),
    FOREIGN KEY (ID_DIRECCIONES) REFERENCES DIRECCIONES(ID)
);

# PEDIDO_CONTIENE_ARTICULO (ID_PEDIDO, ID_ARTICULO, CANTIDAD)
CREATE TABLE PEDIDO_CONTIENE_ARTICULO (
	ID_PEDIDO INT,
    ID_ARTICULO INT,
    CANTIDAD MEDIUMINT,
    
    PRIMARY KEY (ID_PEDIDO, ID_ARTICULO),
    
    FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO(ID),
    FOREIGN KEY (ID_ARTICULO) REFERENCES ARTICULO(ID)
);

# ARTICULO_PROVE_FABRICA (ID_ARTICULO, ID_FABRICA, STOCK)
CREATE TABLE ARTICULO_PROVE_FABRICA (
	ID_ARTICULO INT,
    ID_FABRICA INT,
    STOCK DECIMAL (7,2),
    
    PRIMARY KEY (ID_ARTICULO, ID_FABRICA),
    
    FOREIGN KEY (ID_ARTICULO) REFERENCES ARTICULO(ID),
    FOREIGN KEY (ID_FABRICA) REFERENCES FABRICA(ID),
    
    CONSTRAINT STOCK_POSITIVO CHECK (STOCK > 0)
);